name: test

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  pull_request:
    branches:
      - "*"
      - "!gh-pages"
  schedule:
    - cron: "0 4 * * MON"

concurrency:
  group: "test-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test-uv:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    defaults:
      run:
        shell: bash -l {0}

    name: PyPi os=${{ matrix.os }} - python=${{ matrix.python-version }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install the project
        run: uv sync --all-groups --python ${{ matrix.python-version }}

      - name: Run tests
        run: uv run pytest
        env:
          POLARIS_USERNAME: ${{ secrets.POLARIS_USERNAME }}
          POLARIS_PASSWORD: ${{ secrets.POLARIS_PASSWORD }}

      - name: Test CLI
        run: uv run polaris --help

      - name: Test building the doc
        run: uv run mkdocs build

  test-conda:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    defaults:
      run:
        shell: bash -l {0}

    name: Conda os=${{ matrix.os }} - python=${{ matrix.python-version }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup mamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: env.yml
          environment-name: polaris_testing_env
          cache-environment: true
          cache-downloads: true
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Install library
        run: python -m pip install --no-deps .

      - name: Run pytest
        run: pytest
        env:
          POLARIS_USERNAME: ${{ secrets.POLARIS_USERNAME }}
          POLARIS_PASSWORD: ${{ secrets.POLARIS_PASSWORD }}

      - name: Test CLI
        run: polaris --help
